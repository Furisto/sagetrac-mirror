#!/usr/bin/env bash

# If any command-line arguments are present, treat them as files to be
# checksummed. If no arguments are present, all tarballs in
# $SAGE_ROOT/upstream are checksummed.
if [ $# -eq 0 ]; then
    cd "$SAGE_ROOT"
    set upstream/*.tar*
fi

for upstream in "$@"
do
    tarball=`basename "$upstream"`
    pkg_name=${tarball%-*}
    pkg_compression=${tarball#*.tar}   # gz or bz2
    tar_pkg=$( echo $tarball | sed -r "s/^([^-]*)-.*$/\1/" )
    tar_cmp=$( echo $tarball | sed -r "s/^(.*)(.tar(\.gz|\.bz2)?)/\2/" )
    ext_str="s/^"$tar_pkg"-(.*)"$tar_cmp"$/\1/"
    tar_ver=$( echo $tarball | sed -r $ext_str )
    echo -n $tarball ":"
    if [ -d "$SAGE_ROOT/build/pkgs/$pkg_name" ]; then
	sage_version=$(cat $SAGE_ROOT/build/pkgs/$pkg_name/package-version.txt | sed -re "s/\.p[0-9]+$//")
	## echo -n " "$sage_version
	sage_patch=$( cat $SAGE_ROOT/build/pkgs/$pkg_name/package-version.txt | sed -re "s/^(.*)\.(p[0-9]+)$/\2/" )
	if [ $sage_patch = $sage_version ] ; then sage_patch="" ; fi
	echo sage_version = $sage_version, sage_patch = $sage_patch
	if [ $sage_version != $tar_ver ] ; then 
	    echo "Version mismatch between tarball $tar_ver and directory $sage_version. Newer version \? Proceeding anyway with patch .p0"
	    sage_patch=".p0"
	    sage_version=$tar_ver
	fi
	checksums="$SAGE_ROOT/build/pkgs/$pkg_name/checksums.ini"
	## Temporaire
	echo checksums=$checksums
        ## echo "tarball=$pkg_name-$sage_version.tar$pkg_compression" > $checksums
	## echo "tarball=$tarball"> $checksums
	echo "tarball=$tarball"
        ## echo -n "sha1=">> $checksums
	echo -n "sha1="
        if command -v sha1sum &>/dev/null; then
            ## sha1sum $upstream | sed 's/ .*//' >> $checksums
	    sha1sum $upstream | sed 's/ .*//'
        else
            ## shasum -a 1 $upstream | sed 's/ .*//'>> $checksums
	    shasum -a 1 $upstream | sed 's/ .*//'
        fi
	
        ## echo -n "md5=">> $checksums
	echo -n "md5="
        if command -v md5 &>/dev/null; then
            ## md5 $upstream | sed 's/.*= *//'>> $checksums
	    md5 $upstream | sed 's/.*= *//'
        else
            ## md5sum $upstream | sed 's/ .*//'>> $checksums
	    md5sum $upstream | sed 's/ .*//'
        fi
        ## echo -n "cksum=">> $checksums
	echo -n "cksum="
        ## cksum $upstream | sed 's/ .*//'>> $checksums
	cksum $upstream | sed 's/ .*//'
    else
	echo "Warning : directory $pkg_name does not exist. Ignored." >&2
    fi
    ## Test temporaire
    echo " ==> " $tar_pkg "+" $tar_ver "+" $tar_cmp "(" $sage_version "+" $sage_patch ")"
    ## C'est bon...
done

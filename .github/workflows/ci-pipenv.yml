name: Build & Test using pipenv

on: [push, pull_request]
  
jobs:
  mac:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install pipenv
      run: brew install pipenv
    - name: Install dependencies
      run: brew install pari ppl singular gsl lapack boost bdw-gc glpk libatomic_ops mpfi nauty ninja openblas openssl pandoc gpatch ppl r readline suite-sparse yasm zeromq flint arb ntl
    - name: Create virtual environment
      run: cd src && mkdir -p .venv && pipenv install --dev --skip-lock --sequential && pipenv run pip list
      env:
          PKG_CONFIG_PATH: "/usr/local/opt/openblas/lib/pkgconfig"
    - name: Install editable manually
      run: cd src && pipenv run pip install -e . --verbose --upgrade --exists-action=i --no-build-isolation
      env:
          PKG_CONFIG_PATH: "/usr/local/opt/openblas/lib/pkgconfig"
    - name: Test
      run: cd src && pipenv run python -c 'import sage.all'
    - name: Configure
      run: |
        brew install autoconf automake
        ./bootstrap -d && ./configure
      if: always()
 
  linux:
    runs-on: ubuntu-latest
    container: 
      image: ubuntu:20.10
    steps:
      - uses: actions/checkout@v2
      - name: Install tools
        run: |
          apt-get update -y
          apt-get install -y python3-pip tox autoconf automake
          pip install pipenv
      - name: Install dependencies
        run: |
          tox -e local-sudo-standard -- config.status
          cp -f /usr/lib/ecl/maxima.fas /usr/lib/x86_64-linux-gnu/ecl-20.4.24/maxima.fas
          make conway_polynomials-no-deps
          make elliptic_curves-no-deps
          make combinatorial_designs-no-deps
          make graphs-no-deps
          make polytopes_db-no-deps
          make gap-no-deps
          make jmol-no-deps
          make threejs-no-deps
      - name: Set up cache
        uses: actions/cache@v1
        with:
          path: src/.venv
          key: venv-runner.os-${{ hashFiles('src/Pipfile.lock') }}
      - name: Create virtual environment
        run: cd src && mkdir -p .venv && pipenv install --dev --skip-lock --verbose && pipenv run pip list
        env:
          PIP_NO_BUILD_ISOLATION: false
      # The following is for testing purposes in case the pipenv install above fails
      - name: Install editable manually
        run: cd src && pipenv run pip install -e . --verbose --upgrade --exists-action=i --no-build-isolation
        if: failure()
      - name: Test
        run: cd src && pipenv run python -c 'import sage.all; import sage.doctest.control; sage.doctest.control.run_doctests(sage)'
        env:
          SAGE_LOCAL: ${{GITHUB.WORKSPACE}}/local

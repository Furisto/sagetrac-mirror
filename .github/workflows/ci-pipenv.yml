name: Build & Test using pipenv

on: [push, pull_request]
  
jobs:
  build-mac:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install pipenv
      run: brew install pipenv
    - name: Install dependencies
      run: brew install pari ppl singular gsl lapack openblas
    - name: Create virtual environment
      run: cd src && mkdir -p .venv && pipenv install --dev --skip-lock --sequential && pipenv run pip list
    - name: Install editable manually
      run: cd src && pipenv run pip install -e . --verbose --upgrade --exists-action=i --no-build-isolation
    - name: Test
      run: cd src && pipenv run python -c 'import sage.all'
    - name: Configure
      run: |
        brew install autoconf automake
        ./bootstrap -d && ./configure
      if: always()
 
  build-linux:
    runs-on: ubuntu-latest
    container: 
      image: ubuntu:20.10
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          apt-get update -y
          apt-get install -y wget apt-transport-https tzdata update-notifier-common
          wget https://raw.githubusercontent.com/averyfreeman/dotnet-sdk-5.0rc1-Ubuntu-20.10-installer/261df27fd670c052788874785ca197e7d4b0decb/install-dotnet-preview-groovy.sh
          chmod +x install-dotnet-preview-groovy.sh
          ./install-dotnet-preview-groovy.sh
          dotnet tool install powershell --tool-path /usr/local/bin
          apt-get update -y
          apt-get install -y python3-pip libffi-dev libpari-dev libmpfr-dev libmpc-dev libppl-dev libgsl-dev libsingular4-dev libntl-dev libflint-dev liblinbox-dev libflint-arb-dev libhomfly-dev libgiac-dev libratpoints-dev libzn-poly-dev libbrial-dev libbrial-groebner-dev libatlas-base-dev libgap-dev
      - name: Install more dependencies
        run: |
          Function ExtractPackages
          {
            param($path)
            @(Get-Content $path | Where-Object { !$_.StartsWith("#") })
          }
          $packages = Get-ChildItem build/pkgs -recurse -Include debian.txt, debian-bootstrap.txt | foreach-object { ExtractPackages $_.FullName } | Sort-Object -Unique
          # We already installed python
          $packages -= 'libpython3.7-dev'
          echo "Install the following packages:" @packages
          sudo apt-get install -y @packages
        shell: pwsh
      - name: Install pipenv
        run: pip install pipenv
      - name: Create virtual environment
        run: cd src && mkdir -p .venv && pipenv install --dev --skip-lock --sequential && pipenv run pip list
      - name: Install editable manually
        run: cd src && pipenv run pip install -e . --verbose --upgrade --exists-action=i --no-build-isolation
        if: always()
      - name: Test
        run: cd src && pipenv run python -c 'import sage.all'
      - name: Configure
        run: |
          apt-get install -y autoconf automake
          ./bootstrap -d && ./configure
        if: always()

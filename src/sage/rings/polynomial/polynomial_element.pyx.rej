--- src/sage/rings/polynomial/polynomial_element.pyx
+++ src/sage/rings/polynomial/polynomial_element.pyx
@@ -7462,6 +7462,23 @@ cdef class Polynomial(CommutativeAlgebraElement):
 
         from sage.symbolic.ring import SR
         if L is SR:
+            if self.degree() == 2:
+                from sage.functions.other import sqrt
+                from sage.libs.pynac.pynac import I
+                coeffs = self.list()
+                D = coeffs[1]*coeffs[1] - 4*coeffs[0]*coeffs[2]
+                if D > 0:
+                    l = [((-coeffs[1]-sqrt(D))/2/coeffs[2], 1), 
+                         ((-coeffs[1]+sqrt(D))/2/coeffs[2], 1)] 
+                elif D < 0:
+                    l = [((-coeffs[1]-I*sqrt(-D))/2/coeffs[2], 1), 
+                         ((-coeffs[1]+I*sqrt(-D))/2/coeffs[2], 1)]
+                else:
+                    l = [(-coeffs[1]/2/coeffs[2]), 2]
+                if multiplicities:
+                    return l
+                else:
+                    return [val for val,m in l]
             vname = 'do_not_use_this_name_in_a_polynomial_coefficient'
             var = SR(vname)
             expr = self(var)

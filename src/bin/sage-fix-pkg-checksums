#!/usr/bin/env bash

# If any command-line arguments are present, treat them as files to be
# checksummed. If no arguments are present, all tarballs in
# $SAGE_ROOT/upstream are checksummed.
if [ $# -eq 0 ]; then
    cd "$SAGE_ROOT"
    set upstream/*.tar*
fi

for upstream in "$@"
do
    tarball=`basename "$upstream"`
    upstream_pkg_name=${tarball%-*}
    ## uppercase==>lowercase ? Allows to accept existing cases.
    pkg_name=$( echo $upstream_pkg_name | tr A-Z a-z )
    pkg_compression=${tarball#*.tar}   # gz or bz2
    tar_pkg=$( echo $tarball | sed -r "s/^([^-]*)-.*$/\1/" )
    tar_cmp=$( echo $tarball | sed -r "s/^(.*)(.tar(\.gz|\.bz2)?)/\2/" )
    ext_str="s/^"$tar_pkg"-(.*)"$tar_cmp"$/\1/"
    tar_ver=$( echo $tarball | sed -r $ext_str )
    echo $tarball
    ## Suggestion to user. Alernative : fix it automagically. TBD
    if [ $upstream_pkg_name != $pkg_name ] ; then
	echo "(must be renamed in lowercase !)"
	exit 1
    fi
    if [ -d "$SAGE_ROOT/build/pkgs/$pkg_name" ]; then
	sage_version=$(cat $SAGE_ROOT/build/pkgs/$pkg_name/package-version.txt | sed -re "s/\.p[0-9]+$//")
	sage_patch=$( cat $SAGE_ROOT/build/pkgs/$pkg_name/package-version.txt | sed -re "s/^(.*)\.(p[0-9]+)$/\2/" )
	if [ $sage_patch = $sage_version ] ; then sage_patch="" ; fi
	## echo sage_version = $sage_version, sage_patch = $sage_patch
	if [ $sage_version != $tar_ver ] ; then
	    sage_patch=".p0"
	    sage_version=$tar_ver
	    ## Suggestion to user. Alernative : fix it automagically. TBD
	    ## Volker Braun : this must be an error.
	    echo "Version mismatch between tarball $tar_ver and directory build/pkgs/$pkg_name."
	    echo "Newer version ? You must put $sage_version$sage_patch in package-version.txt."
	    exit 1
	fi
	checksums="$SAGE_ROOT/build/pkgs/$pkg_name/checksums.ini"
	echo "tarball=$tarball"> $checksums
	## echo "tarball=$tarball"
	echo -n "sha1=">> $checksums
	## echo -n "sha1="
        if command -v sha1sum &>/dev/null; then
            sha1sum $upstream | sed 's/ .*//' >> $checksums
        else
            shasum -a 1 $upstream | sed 's/ .*//'>> $checksums
        fi
	
        echo -n "md5=">> $checksums
        if command -v md5 &>/dev/null; then
            md5 $upstream | sed 's/.*= *//'>> $checksums
        else
            md5sum $upstream | sed 's/ .*//'>> $checksums
        fi
        echo -n "cksum=">> $checksums
        cksum $upstream | sed 's/ .*//'>> $checksums
    else
	echo "Error : directory $pkg_name does not exist."
	exit 1
    fi
done

#!/usr/bin/env bash

########################################################
# Build Sage source distribution
# This script should be called by the spkg/bin/sage script
########################################################

set -e

CMD="${0##*/}"

die () {
    echo >&2 -e "$@"
    exit 1
}

usage () {
    echo "usage: $CMD [TMP_DIR]"
}

if [ $# -gt 1 ]; then
    usage
    die
fi

if [ -z "$SAGE_ROOT" ]; then
    die "must be run from within a Sage enviroment, or with SAGE_ROOT provided"
fi

if [ -z "$SAGE_SRC" ]; then
    die "must be run from within a Sage enviroment, or with SAGE_SRC provided"
fi

if [ "$#" -gt 1 ]; then
    TMP_DIR="$2"
else
    TMP_DIR="$SAGE_ROOT/tmp"
fi

source "$SAGE_SRC/bin/sage-version.sh"
echo "Sage version $SAGE_VERSION, release date $SAGE_RELEASE_DATE"

TARGET="sage-$SAGE_VERSION"

rm -rf "$TMP_DIR/$TARGET"
mkdir -p "$TMP_DIR/$TARGET"

git clone "$SAGE_ROOT" "$TMP_DIR/$TARGET"
cd "$TMP_DIR/$TARGET"
git remote set-url origin "$SAGE_REPO_ANONYMOUS"

# Copy all the upstream packages
mkdir -p upstream
export SAGE_CURRENT_UPSTREAM="$SAGE_ROOT/upstream"
export SAGE_INSTALL_FETCH_ONLY=yes

# create fake sage-spkg that only downloads files if necessary
echo '
source "${0%spkg}env"
set -e
echo "sage -spkg $@"
mkdir -p "$SAGE_SPKG_INST"
PKG_NAME="$1"
PKG_BASE="${PKG_NAME%%-*}"
PKG_DIR="$SAGE_ROOT/build/pkgs/$PKG_BASE"
source "$PKG_DIR/checksums.ini"
PKG_VER_PATCHLEVEL="$(cat "$PKG_DIR/package-version.txt")"
PKG_VERSION="${PKG_VER_PATCHLEVEL%%.p*}"
TARBALL_BASE="${tarball%%-VERSION.*}"
TARBALL_EXT="${tarball##*-VERSION.}"
TARBALL="$TARBALL_BASE-$PKG_VERSION.$TARBALL_EXT"
echo "Tarball for $PKG_BASE is $TARBALL"
cached_tarball="$SAGE_CURRENT_UPSTREAM/$TARBALL"
if [ -f "$cached_tarball" ]; then
    echo "Using already downloaded $cached_tarball"
    cp "$cached_tarball" $SAGE_ROOT/upstream
else
    PKG_URL="$SAGE_UPSTREAM/$PKG_BASE/$TARBALL"
    echo "Downloading $PKG_URL"
    PKG_TMP="${PKG_URL##*/}.tmp"
    sage-download-file "$PKG_URL" >"$PKG_TMP"
    mv "$PKG_TMP" "$SAGE_ROOT/upstream/$TARBALL"
fi
touch "$SAGE_SPKG_INST/$PKG_NAME"
' > src/bin/sage-spkg
chmod +x src/bin/sage-spkg

# use install to get all needed packages
(
    unset SAGE_ENV_SOURCED
    unset SAGE_ROOT
    cd build
    SAGE_INSTALL_GCC=yes ./install all
)

# remove any artifacts from running install
make distclean

# revert changes to sage-spkg
git checkout HEAD src/bin/sage-spkg

# save space
git prune

cd "$TMP_DIR"

echo "Creating $TARGET.tar.gz ..."
tar zcf "$TARGET".tar.gz "$TARGET"

mkdir -p "$SAGE_ROOT"/dist

rm -rf "$SAGE_ROOT/dist/$TARGET"

echo "Moving final distribution file to $SAGE_ROOT/dist"

mv "$TARGET" "$SAGE_ROOT"/dist/
mv "$TARGET".* "$SAGE_ROOT"/dist/

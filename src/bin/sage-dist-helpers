# Shell functions for making spkg-install scripts a little easier to write,
# eliminating duplication.  All Sage helper functions begin with sdh_ (for
# Sage-distribution helper).  Consult the below documentation for the list of
# available helper functions:
#
# - sdh_die MESSAGE
#
#    If the last command run exited with an error, exit the build script
#    with the error code of the last command, and print an error message.
#    Typically used like:
#
#        command || sdh_die "Command failed"
#
# - sdh_check_vars [VARIABLE ...]
#
#    Check that one or more variables are defined and non-empty, and exit with
#    an error if any are undefined or empty. Variable names should be given
#    without the '$' to prevent unwanted expansion.
#
# - sdh_guard
#
#    Wrapper for `sdh_check_vars` that checks some common variables without
#    which many/most packages won't build correctly (SAGE_ROOT, SAGE_LOCAL,
#    SAGE_SHARE). This is important to prevent installation to unintended
#    locations.
#
# - sdh_configure [...]
#
#    Runs `./configure --prefix="$SAGE_LOCAL" --libdir="$SAGE_LOCAL/lib"`.
#    Additional arguments to `./configure` may be given as arguments.  However,
#    if the first argument is `--` then no default arguments are given (useful
#    for non-standard configure scripts).
#
# - sdh_make [...]
#
#    Runs `$MAKE` with the default target.  Additional arguments to `make` may
#    be given as arguments.
#
# - sdh_make_install [...]
#
#    Runs `$SAGE_SUDO $MAKE install` with DESTDIR correctly set to a temporary
#    install directory, for staged installations.  Additional arguments to
#    `make` may be given as arguments.
#
# - sdh_clean_info
#
#    Call this after building a package that installs an entry in the
#    share/info/dir file to remove that file from the list of files installed
#    by that package.  This is necessary to prevent packages that share this
#    file from clobbering each other.  Such packages should include an
#    spkg-postinst that calls sdh_install_info.
#
# - sdh_install_info
#
#    Post-install helper (for use in spkg-postinst) to install one or more
#    entries in the info-dir file for the package's .info files.  This
#    directory is used by multiple packages, which is why this must be
#    performed as a post-installation step.

set -o allexport


sdh_die () {
    local ret=$?
    local msg="$@"
    if [ $ret -ne 0 ]; then
        echo >&2 "************************************************************"
        echo >&2 "$msg"
        echo >&2 "************************************************************"
        exit $ret
    fi
}


sdh_check_vars() {
    local varname
    while [ -n "$1" ]; do
        if [ -z "$(eval "echo "\${${1}+isset}"")" ]; then
            echo >&2 "${1} undefined ... exiting"
            echo >&2 "Maybe run 'sage --sh'?"
            exit 1
        fi
        shift
    done
}


sdh_guard() {
    sdh_check_vars SAGE_ROOT SAGE_LOCAL SAGE_SHARE
}


sdh_configure() {
    local defaults
    echo "Configuring $PKG_NAME"
    if [ "$1" = "--" ]; then
        defaults=()
        shift
    else
        defaults=(--prefix="$SAGE_LOCAL" --libdir="$SAGE_LOCAL/lib")
    fi
    ./configure "${defaults[@]}" "$@" || sdh_die "Error configuring $PKG_NAME"
}


sdh_make() {
    echo "Building $PKG_NAME"
    ${MAKE:-make} "$@" || sdh_die "Error building $PKG_NAME"
}


sdh_make_install() {
    echo "Installing $PKG_NAME"
    $SAGE_SUDO ${MAKE:-make} install DESTDIR="$SAGE_DESTDIR" "$@" || \
        sdh_die "Error installing $PKG_NAME"
}


sdh_clean_info() {
    # Test that $SAGE_DESTDIR is set; since if we are installing directly
    # into $SAGE_LOCAL we don't want to delete this file.
    if [ -n "$SAGE_DESTDIR" ]; then
        rm "$SAGE_DESTDIR$SAGE_LOCAL/share/info/dir" || \
            sdh_die "Error cleaning the share/info/dir file (maybe it doesn't exist?)"
    fi
}


sdh_install_info() {
    if [ -n "$SAGE_DESTDIR" ]; then
        for filename in "$SAGE_DESTDIR$SAGE_SHARE/info"/*.info; do
            install-info --info-dir="$SAGE_SHARE/info" "$filename" || \
                sdh_die "Error updating info/dir for $PKG_NAME"
        done
    fi
}

set +o allexport

#!/usr/bin/env bash

if [ -z "$SAGE_LOCAL" ]; then
    echo "SAGE_LOCAL undefined - exiting..."
    echo "Maybe run 'sage -sh'?"
    exit 1
fi

# Helper functions
success() {
    if [ $? -ne 0 ]; then
        echo "Error building Sphinx: '$1'"
        exit 1
    fi
}

CUR=`pwd`

# Apply patches
echo "Patching Sphinx..."
( echo "include spkg.mk" | sage-dist-make - patch-stamp ) || exit $?
echo
cd src

# Build new version
echo "Building Sphinx..."
python setup.py build
success 'Error building Sphinx'
echo

echo "Removing old version of Sphinx..."
rm -rf "$SAGE_LOCAL"/lib/python/site-packages/Sphinx-*
success 'Error deleting previous version'
echo

# Install new version
echo "Installing Sphinx..."
sage-setup.py install
success 'Error installing Sphinx'
echo

cd "$CUR"
sage-dist-install -d "$DESTDIR$SAGE_PREFIX/bin" && \
sage-dist-install -t "$DESTDIR$SAGE_PREFIX/bin" patches/sphinx-build
success "Error copying sphinx-build to $SAGE_LOCAL/bin/"
echo

echo "Creating grammar pickle..."
python create_grammar_pickle.py
success 'Error creating the grammar pickle'
echo

echo "Deleting old Sage documentation output..."
# FIXME: this is not part of sphinx.
# use unstage to unstage stuff, clean to clean stuff
for docdir in "$SAGE_ROOT"/devel/sage-*/doc/output; do
    if [ -d "$docdir" ]; then
        echo "Removing \"$docdir\"..."
        rm -rf "$docdir"
    fi
done
success 'Error deleting old documentation output'
echo

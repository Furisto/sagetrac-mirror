# It is best to unset these environment variables, as they might confuse
# the Python installer.
unset PYTHONHOME
unset PYTHONPATH

# Prevent use of the system hg and svn as it might make the installation fail
export HAS_HG=no
export SVNVERSION=no

cd src

# Remove old libraries
rm -f "$SAGE_LOCAL"/lib/libpython2*

# Running 'make install' in parallel is a bad idea, so we use
# only 1 job.
# The "-i" option to ignore errors is crucial, especially in the
# case of upgrades.
$MAKE -i -j1 install
if [ $? -ne 0 ]; then
    echo >&2 "Error installing Python."
    exit 1
fi

echo "Installing valgrind suppression file..."
mkdir -p "$SAGE_EXTCODE/valgrind"
cp Misc/valgrind-python.supp "$SAGE_EXTCODE/valgrind/python.supp"
if [ $? -ne 0 ]; then
    echo >&2 "Error installing valgrind suppression file."
    exit 1
fi

if [ "$UNAME" = "CYGWIN" ]; then
    EXE=".exe"
elif [ "$UNAME" = "Linux" ]; then
    export LD_LIBRARY_PATH="."
fi

PYTHON_VERSION=$("./python${EXE}" -c 'import sys; print("%d.%d" % sys.version_info[:2])')

# On OS X with XCode 4, the presence of
# $SAGE_LOCAL/lib/python2.*/config/libpython2.x.a causes problems with
# GiNaC -- see #11967.  It is easiest to test the version of OS X; we
# delete this file if using OS X 10.6 or later (so `uname -r` returns
# x.y.z with x >= 10).
if [ "$UNAME" = "Darwin" ] && \
    [ `uname -r | cut '-d.' -f1` -gt 9 ]; then
    rm -f "$SAGE_LOCAL/lib/python$PYTHON_VERSION/config/libpython${PYTHON_VERSION}.a"
elif [ "$UNAME" = "CYGWIN" ]; then
    # See http://trac.sagemath.org/ticket/20437
    ln -sf "python$PYTHON_VERSION/config/libpython${PYTHON_VERSION}.dll.a" "$SAGE_LOCAL/lib/libpython${PYTHON_VERSION}.dll.a"
fi

#!/usr/bin/env bash

if [[ -z $SAGE_LOCAL ]]; then
    echo >&2 "Error: SAGE_LOCAL undefined - exiting..."
    echo >&2 "Maybe run 'sage -sh'?"
    exit 1
fi

if [[ -z $CFLAG64 ]]; then
    CFLAG64=-m64
fi

# Compile for 64-bit if SAGE64 is set to 'yes':
if [[ $SAGE64 = yes ]]; then
    echo "Building a 64-bit version of Readline."
    CFLAGS="$CFLAGS $CFLAG64"
    CPPFLAGS="$CPPFLAGS $CFLAG64"
    # Some packages may need LDFLAGS and/or ABI set here.
    LDFLAGS="$LDFLAGS $CFLAG64"
fi

if [[ $SAGE_DEBUG = yes ]]; then
    CFLAGS="$CFLAGS -g -O0"
else
    CFLAGS="-g -O2 $CFLAGS"
fi

echo "The following environment variables will be exported:"
echo "Using CC=$CC"
echo "Using CFLAGS=$CFLAGS"
echo "Using CPPFLAGS=$CPPFLAGS"
echo "Using LDFLAGS=$LDFLAGS"
echo "Configure scripts and/or makefiles might override these later."

export CC
export CFLAGS
export CPPFLAGS
export LDFLAGS

cd src/

echo "Applying patches to upstream source..."
for patch in ../patches/*.patch; do
    patch -p1 <"$patch"
    if [[ $? -ne 0 ]]; then
        echo >&2 "Error applying '$patch'."
        exit 1
    fi
done

echo "Configuring readline..."
./configure \
    --prefix="$SAGE_LOCAL" \
    --libdir="$SAGE_LOCAL/lib" \
    --with-curses \
    --enable-shared --disable-static
if [[ $? -ne 0 ]]; then
    echo >&2 "Error configuring readline."
    exit 1
fi

echo "Now building static and shared readline libraries..."
$MAKE
if [[ $? -ne 0 ]]; then
    echo >&2 "Error building readline."
    exit 1
fi

echo "Build succeedeed.  Deleting old readline headers and libs"
echo "before installing the new ones..."

$SAGE_SUDO ../spkg-do-install

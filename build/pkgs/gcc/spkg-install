#!/usr/bin/env bash

if [ -z "$SAGE_LOCAL" ]; then
    echo >&2 "SAGE_LOCAL undefined ... exiting"
    echo >&2 "Maybe run 'sage --sh'?"
    exit 1
fi

# Apply fixes to upstream source
cd src

# Exit on error
set -e

# Build in a separate directory, not in src/ (a.k.a. a VPATH build).
# This is the recommended way to build GCC.
cd ..
mkdir gcc-build
cd gcc-build


# Let GCC build on Raspberry Pi using hard floats.
if [ `uname -m` = "armv6l" ]; then
    GCC_CONFIGURE="--with-arch=armv6 --with-fpu=vfp --with-float=hard $GCC_CONFIGURE"
fi

# Let GCC build on more recent ARM boards using hard floats.
if [ `uname -m` = "armv7l" ]; then
    GCC_CONFIGURE="--with-arch=armv7-a --with-fpu=vfpv3-d16 --with-float=hard $GCC_CONFIGURE"
fi

if [ "$SAGE_CHECK" = yes ]; then
    # Enable internal checks in GCC.  These checks do not affect the
    # binaries produced by GCC, but they do increase the compile time
    # of everything compiled with GCC.
    GCC_CONFIGURE="$GCC_CONFIGURE --enable-checking=yes"
fi

# Use the assembler/linker specified by $AS/$LD if they differ from the
# default.
if [ -n "$AS" -a "$AS" != "as" ]; then
    CONFIGURE_AS="--with-as=$AS"
fi
if [ -n "$LD" -a "$LD" != "ld" ]; then
    CONFIGURE_LD="--with-ld=$LD"
fi

# If the CC/CXX compiler is actually clang only build gfortran
if [ "$IS_CLANG" = yes ]; then
    GCC_CONFIGURE="$GCC_CONFIGURE --enable-languages=fortran --disable-bootstrap"
else
    GCC_CONFIGURE="$GCC_CONFIGURE --enable-languages=c,c++,fortran"
fi

../src/configure \
    --prefix="$SAGE_LOCAL" \
    --with-local-prefix="$SAGE_LOCAL" \
    --with-gmp="$SAGE_LOCAL" --with-mpfr="$SAGE_LOCAL" --with-mpc="$SAGE_LOCAL" \
    --with-system-zlib \
    --disable-multilib \
    --disable-nls \
    --disable-libitm \
    $GCC_CONFIGURE "$CONFIGURE_AS" "$CONFIGURE_LD"

$MAKE BOOT_LDFLAGS="-Wl,-rpath,$SAGE_LOCAL/lib"

$MAKE install

# If CC/CXX is clang we only want gfortran to be available
# But we also don't need gmp/mpir/mpfr/mpc to be rebuilt
if [ "$IS_CLANG" = yes ]; then
    rm -f "$SAGE_LOCAL"/bin/gcc "$SAGE_LOCAL"/bin/cpp
fi
# Force re-installation of gmp, mpir, mpfr and mpc with the GCC we just built.
cd "$SAGE_SPKG_INST"
rm -f gmp-* mpir-* mpfr-* mpc-*

# Force re-configuration: the next time that "make" is run, we don't
# want GCC to be built again, see Trac #19324
touch "$SAGE_ROOT/configure"

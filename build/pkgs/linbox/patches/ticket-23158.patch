From 468dc82845ef424cd9b66ef34129d397759c7680 Mon Sep 17 00:00:00 2001
From: Clement Pernet <clement.pernet@imag.fr>
Date: Wed, 7 Jun 2017 14:35:17 +0200
Subject: [PATCH] fix solve with SparseElim and Wiedemann methods on non-square
 systems

---
 linbox/algorithms/lifting-container.h | 4 ++--
 linbox/solutions/solve.h              | 3 +--
 2 files changed, 3 insertions(+), 4 deletions(-)

diff --git a/linbox/algorithms/lifting-container.h b/linbox/algorithms/lifting-container.h
index 18d1ea80..b7b8924f 100644
--- a/linbox/algorithms/lifting-container.h
+++ b/linbox/algorithms/lifting-container.h
@@ -437,7 +437,7 @@ namespace LinBox
 
 #ifdef DEBUG_LC
 				std::cout<<"\n residu "<<_position<<": ";
-				for (size_t i=0;i<digit.size();++i)
+				for (size_t i=0;i<_res.size();++i)
 					std::cout<<_res[i]<<",";
 				std::cout<<"\n digit "<<_position<<": ";
 				for (size_t i=0;i<digit.size();++i)
@@ -447,7 +447,7 @@ namespace LinBox
 				/*  prepare for updating residu */
 
 				// compute v2 = _matA * digit
-				IVector v2 (_lc.ring(),_lc._matA.coldim());
+				IVector v2 (_lc.ring(),_lc._matA.rowdim());
 				_lc._MAD.applyV(v2,digit, _res);
 
 #ifdef DEBUG_LC
diff --git a/linbox/solutions/solve.h b/linbox/solutions/solve.h
index fc8aaf8f..b0a4af47 100644
--- a/linbox/solutions/solve.h
+++ b/linbox/solutions/solve.h
@@ -641,8 +641,7 @@ namespace LinBox
 		// if singularity unknown and matrix is square, we try nonsingular solver
 		switch ( m.singular() ) {
 		case Specifier::SINGULARITY_UNKNOWN:
-			switch (A.rowdim() == A.coldim() ?
-				status=rsolve.solveNonsingular(x, d, A, b,(int)m.maxTries()) : SS_SINGULAR) {
+			switch (status=rsolve.solveNonsingular(x, d, A, b,(int)m.maxTries())) {
 			case SS_OK:
 				m.singular(Specifier::NONSINGULAR);
 				break;
-- 
2.13.0


#!/usr/bin/env bash

if [ -z "$SAGE_LOCAL" ]; then
   echo >&2 "SAGE_LOCAL undefined ... exiting"
   echo >&2 "Maybe run 'sage -sh'?"
   exit 1
fi

set -e

cd src

# Apply patches (if any):
for patch in ../patches/*.patch; do
    [ -r "$patch" ] || continue  # Skip non-existing or non-readable patches
    patch -p1 <"$patch"
    if [ $? -ne 0 ]; then
        echo >&2 "Error applying '$patch'"
        exit 1
    fi
done

# Setting CFLAGS to have the option -m64 does not work for Numpy when
# making 64-bit builds on at least OS X and Solaris. Instead set CC
# to include the the -m64
if [ -z "$CFLAG64" ] ; then
   CFLAG64=-m64
fi
if [ "$SAGE64" = yes ] ; then
   CC="$CC $CFLAG64"
   export CC
fi

echo "[DEFAULT]" > site.cfg
echo "library_dirs = $SAGE_LOCAL/lib" >> site.cfg
echo "include_dirs = $SAGE_LOCAL/include" >> site.cfg
echo "" >> site.cfg

# Numpy/SciPy ships its own "improved" distutils.
# In particular, if one of these environment variables is defined:
#
#  F77, F90, LDSHARED, LD, AR, RANLIB,
#  F77FLAGS, F90FLAGS, FREEFLAGS, FOPT, FARCH,
#  FDEBUG, FFLAGS, LDFLAGS, ARFLAGS
#
# then it will be used as is (even if empty),
# potentially omitting necessary flags.
# E.g., if LDFALGS is set, but does not contain "-shared",
# linking of shared modules will fail.
#
# So either we unset all of the above which can be harmful,
# or trust that the user won't break everything.
# The most critical parts are:
# - compile objects with -fPIC or equivalent,
# - link them with -shared.

# Make sure that the fortran objects are compiled with -fPIC
if [ -n "${FFLAGS+set}" ]; then
    export FFLAGS="-fPIC $FFLAGS"
fi
if [ -n "${FCFLAGS+set}" ]; then
    export FCFLAGS="-fPIC $FCFLAGS"
fi

# Make sure to link with the shared flag on most platforms
if [ -n "${LDFLAGS+set}" ]; then
    if [ "$UNAME" != "Darwin" ]; then
        export LDFLAGS="-bundle -undefined dynamic_lookup $LDFLAGS"
        export CPPFLAGS="-D__ACCELERATE__ $CPPFLAGS"
    else
        export LDFLAGS="-shared $LDFLAGS"
    fi
fi

# Disable generic and arch dependent optimisations
NUMPY_FCONFIG="config_fc --noopt --noarch"

python setup.py ${NUMPY_FCONFIG} build

# Remove previous installation (if any):
rm -rf "$SAGE_LOCAL/lib/python/site-packages/numpy"

python setup.py install


# Touch all includes such that dependency checking works properly:
# the timestamp of the includes should be *now*, not the time when
# the numpy package was created.
python <<EOF
import os
os.chdir(os.environ["SAGE_ROOT"])  # Import numpy from safe location
import numpy
os.chdir(numpy.get_include())
os.system("touch numpy/*")
EOF

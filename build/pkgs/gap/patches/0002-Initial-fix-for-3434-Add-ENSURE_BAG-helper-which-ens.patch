From c3e314e2830ddae6f08dbba5a8164e0b6b8e7f1b Mon Sep 17 00:00:00 2001
From: "Erik M. Bray" <erik.bray@lri.fr>
Date: Thu, 2 May 2019 16:03:15 +0200
Subject: [PATCH] Initial fix for #3434: Add ENSURE_BAG helper which ensures
 memory is really committed by the OS for a new bag.

Call ENSURE_BAG on new bags created in integer.c if they might be
passed as an argument to a GMP function.
---
 src/gasman.h  | 12 ++++++++++++
 src/integer.c |  9 +++++++++
 2 files changed, 21 insertions(+)

diff --git a/src/gasman.h b/src/gasman.h
index ab3b3bf96..025a7fcdd 100644
--- a/src/gasman.h
+++ b/src/gasman.h
@@ -544,6 +544,18 @@ static inline UInt ResizeWordSizedBag(Bag bag, UInt size)
 }
 
 
+#if defined(SYS_IS_CYGWIN32) && defined(SYS_IS_64_BIT)
+static inline void ENSURE_BAG(Bag bag)
+{
+    memset(PTR_BAG(bag), 0, SIZE_BAG(bag));
+}
+#else
+static inline void ENSURE_BAG(Bag bag)
+{
+}
+#endif
+
+
 /****************************************************************************
 **
 *F  CollectBags(<size>,<full>)  . . . . . . . . . . . . . . collect dead bags
diff --git a/src/integer.c b/src/integer.c
index ae4358863..5373ff845 100644
--- a/src/integer.c
+++ b/src/integer.c
@@ -275,6 +275,7 @@ static void NEW_FAKEMPZ( fake_mpz_t fake, UInt size )
   }
   else {
     fake->obj = NewBag( T_INTPOS, size * sizeof(mp_limb_t) );
+    ENSURE_BAG(fake->obj);
   }
 }
 
@@ -1831,9 +1832,11 @@ Obj ModInt(Obj opL, Obj opR)
     }
     
     mod = NewBag( TNUM_OBJ(opL), (SIZE_INT(opL)+1)*sizeof(mp_limb_t) );
+    ENSURE_BAG(mod);
 
     quo = NewBag( T_INTPOS,
                    (SIZE_INT(opL)-SIZE_INT(opR)+1)*sizeof(mp_limb_t) );
+    ENSURE_BAG(quo);
 
     /* and let gmp do the work                                             */
     mpn_tdiv_qr( (mp_ptr)ADDR_INT(quo), (mp_ptr)ADDR_INT(mod), 0,
@@ -1937,6 +1940,8 @@ Obj QuoInt(Obj opL, Obj opR)
       quo = NewBag( T_INTPOS, SIZE_OBJ(opL) );
     else
       quo = NewBag( T_INTNEG, SIZE_OBJ(opL) );
+
+    ENSURE_BAG(quo);
     
     if ( k < 0 ) k = -k;
 
@@ -1955,6 +1960,7 @@ Obj QuoInt(Obj opL, Obj opR)
     
     /* create a new bag for the remainder                                  */
     rem = NewBag( TNUM_OBJ(opL), (SIZE_INT(opL)+1)*sizeof(mp_limb_t) );
+    ENSURE_BAG(rem);
 
     /* allocate a bag for the quotient                                     */
     if ( TNUM_OBJ(opL) == TNUM_OBJ(opR) )
@@ -1963,6 +1969,7 @@ Obj QuoInt(Obj opL, Obj opR)
     else
       quo = NewBag( T_INTNEG,
                     (SIZE_INT(opL)-SIZE_INT(opR)+1)*sizeof(mp_limb_t) );
+    ENSURE_BAG(quo);
 
     mpn_tdiv_qr( (mp_ptr)ADDR_INT(quo), (mp_ptr)ADDR_INT(rem), 0,
                  (mp_srcptr)CONST_ADDR_INT(opL), SIZE_INT(opL),
@@ -2087,9 +2094,11 @@ Obj RemInt(Obj opL, Obj opR)
       return opL;
     
     rem = NewBag( TNUM_OBJ(opL), (SIZE_INT(opL)+1)*sizeof(mp_limb_t) );
+    ENSURE_BAG(rem);
     
     quo = NewBag( T_INTPOS,
                   (SIZE_INT(opL)-SIZE_INT(opR)+1)*sizeof(mp_limb_t) );
+    ENSURE_BAG(quo);
     
     /* and let gmp do the work                                             */
     mpn_tdiv_qr( (mp_ptr)ADDR_INT(quo),  (mp_ptr)ADDR_INT(rem), 0,
-- 
2.15.1


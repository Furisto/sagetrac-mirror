#!/usr/bin/env bash

if [ -z "$SAGE_LOCAL" ]; then
    echo >&2 "SAGE_LOCAL undefined ... exiting"
    echo >&2 "Maybe run 'sage --sh'?"
    exit 1
fi

cd src

# Apply patches.  See SPKG.txt for information about what each patch
# does.
for patch in ../patches/*.patch; do
    [ -r "$patch" ] || continue  # Skip non-existing or non-readable patches
    patch -p1 <"$patch"
    if [ $? -ne 0 ]; then
        echo >&2 "Error applying '$patch'"
        exit 1
    fi
done


CFLAGS="-g -O2 -fPIC $CFLAGS"
CXXFLAGS="-g -O2 -fPIC $CXXFLAGS"

if [ "$SAGE64" = "yes" ]; then
   echo "Building a 64 bit version of fflas_ffpack."
   CFLAGS="-m64 $CFLAGS"
   CXXFLAGS="-m64 $CXXFLAGS"
   LDFLAGS="-m64 $LDFLAGS"
fi

export CFLAGS CXXFLAGS LDFLAGS

# FFLAS_FFPACK expect BLAS and LAPACK C interfaces
# To configure BLAS/LAPACK, either:
# - rely on automatic detection system,
# - pass every linking flags for BLAS and LAPACK in --with-blas,
# - pass paths for BLAS in --with-cblas and/or for LAPACK in --with-lapack.
lapack_libs=`sed 's/\([^ ]*\)/-l\1/g' "$SAGE_SHARE"/lapack_config`

./configure --prefix="$SAGE_LOCAL" --libdir="$SAGE_LOCAL/lib" \
    --with-default="$SAGE_LOCAL" \
    --enable-optimization --disable-static \
    --with-blas="$lapack_libs"
if [ $? -ne 0 ]; then
    echo >&2 "Error configuring fflas_ffpack."
    exit 1
fi

$MAKE
if [ $? -ne 0 ]; then
    echo >&2 "Error building fflas_ffpack."
fi

$MAKE install
if [ $? -ne 0 ]; then
    echo >&2 "Error installing fflas_ffpack."
    exit 1
fi

#!/usr/bin/env bash

if [ -z "$SAGE_LOCAL" ]; then
    echo >&2 "SAGE_LOCAL undefined ... exiting"
    echo >&2 "Maybe run 'sage --sh'?"
    exit 1
fi

cd src

# Apply patches.  See SPKG.txt for information about what each patch
# does.
for patch in ../patches/*.patch; do
    [ -r "$patch" ] || continue  # Skip non-existing or non-readable patches
    patch -p1 <"$patch"
    if [ $? -ne 0 ]; then
        echo >&2 "Error applying '$patch'"
        exit 1
    fi
done

if [ "$SAGE_DEBUG" = "yes" ]; then
    echo "Building a debug version of fflas-ffpack."
    export CFLAGS="-O0 -g -fPIC $CFLAGS"
    export CXXFLAGS="-O0 -g -fPIC $CFLAGS"
else
    export CXXFLAGS="-O2 -g -fPIC $CXXFLAGS"
    export CXXFLAGS="-O0 -g -fPIC $CXXFLAGS"
fi

if [ "$SAGE64" = "yes" ]; then
   echo "Building a 64 bit version of fflas-ffpack."
   CFLAGS="-m64 $CFLAGS"
   CXXFLAGS="-m64 $CXXFLAGS"
fi


if [ $UNAME = "SunOS" ]; then
    FFLASFFPACK_CONFIGURE="--with-blas=\"-llapack -lcblas -latlas -lrt\" $FFLASFFPACK_CONFIGURE"
fi

./configure --prefix="$SAGE_LOCAL" --libdir="$SAGE_LOCAL/lib" \
    --with-default="$SAGE_LOCAL" \
    --enable-optimization --disable-static \
    $FFLASFFPACK_CONFIGURE
if [ $? -ne 0 ]; then
    echo >&2 "Error configuring fflas-ffpack"
    exit 1
fi

$MAKE
if [ $? -ne 0 ]; then
    echo >&2 "Error building fflas-ffpack"
    exit 1
fi

$MAKE install
if [ $? -ne 0 ]; then
    echo >&2 "Error installing fflas-ffpack"
    exit 1
fi

